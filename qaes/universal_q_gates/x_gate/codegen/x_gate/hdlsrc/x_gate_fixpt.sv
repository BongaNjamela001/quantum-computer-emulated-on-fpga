// -------------------------------------------------------------
// 
// File Name: /home/bonga/Desktop/EEE4022S/EEE4022S_Github/qaes/universal_q_gates/x_gate/codegen/x_gate/hdlsrc/x_gate_fixpt.sv
// Created: 2024-10-26 15:01:11
// 
// Generated by MATLAB 24.2, MATLAB Coder 24.2 and HDL Coder 24.2
// 
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Design base rate: 1
// 
// -------------------------------------------------------------


import x_gate_fixpt_pkg::* ;

// -------------------------------------------------------------
// 
// Module: x_gate_fixpt
// Source Path: x_gate_fixpt
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module x_gate_fixpt
          #(  parameter logic [3:0] a0 = '{1'b0, 1'b1, 1'b1, 1'b0}  /* ufix1 [4] */)
          (  input logic [1:0]state  /* ufix1 [2] */,
             output logic [1:0]new_state  /* ufix1 [2] */);


  logic [1:0] new_state_1;  /* ufix1 [2] */
  logic signed [31:0] x_gate_fixpt_k;  /* int32 */
  logic signed [31:0] x_gate_fixpt_l;  /* int32 */
  logic [2:0] x_gate_fixpt_slice_temp;  /* ufix3 */
  vector_of_signed_logic_64 x_gate_fixpt_add_cast [0:1];  /* sfix64 [2] */
  vector_of_unsigned_logic_4 x_gate_fixpt_add_cast_0 [0:1];  /* ufix4 [2] */
  vector_of_unsigned_logic_4 x_gate_fixpt_add_temp [0:1];  /* ufix4 [2] */
  logic x_gate_fixpt_t_0 [0:1] [0:1];  /* ufix1 [2x2] */
  vector_of_unsigned_logic_4 x_gate_fixpt_t_1 [0:1] [0:1];  /* ufix4 [2x2] */


  always_comb begin
    x_gate_fixpt_slice_temp = 3'b000;
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //                                                                          %
    //          Generated by MATLAB 24.2 and Fixed-Point Designer 24.2          %
    //                                                                          %
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    // Apply the Pauli-X gate to a single qubit
    // Parameters:
    //   qubit_state - a 2x1 column vector representing the qubit state, e.g., [1; 0] for |0> or [0; 1] for |1>
    // Returns:
    //   new_state - the resulting state after applying the X gate
    // Define the Pauli-X gate (NOT gate)
    // Apply the X gate to the input qubit state

    for(x_gate_fixpt_l = 32'sd0; x_gate_fixpt_l <= 32'sd1; x_gate_fixpt_l = x_gate_fixpt_l + 32'sd1) begin
      x_gate_fixpt_slice_temp = 3'b000;

      for(x_gate_fixpt_k = 32'sd0; x_gate_fixpt_k <= 32'sd1; x_gate_fixpt_k = x_gate_fixpt_k + 32'sd1) begin
        x_gate_fixpt_add_cast[x_gate_fixpt_k] = {{31{x_gate_fixpt_k[31]}}, {x_gate_fixpt_k, 1'b0}};
        if (state[x_gate_fixpt_k] == 1'b1) begin
          x_gate_fixpt_t_0[x_gate_fixpt_l][x_gate_fixpt_k] = a0[x_gate_fixpt_l + x_gate_fixpt_add_cast[x_gate_fixpt_k]];
        end
        else begin
          x_gate_fixpt_t_0[x_gate_fixpt_l][x_gate_fixpt_k] = 1'b0;
        end
        x_gate_fixpt_add_cast_0[x_gate_fixpt_k] = {3'b0, x_gate_fixpt_t_0[x_gate_fixpt_l][x_gate_fixpt_k]};
        x_gate_fixpt_t_1[x_gate_fixpt_l][x_gate_fixpt_k] = {1'b0, x_gate_fixpt_slice_temp};
        x_gate_fixpt_add_temp[x_gate_fixpt_k] = x_gate_fixpt_t_1[x_gate_fixpt_l][x_gate_fixpt_k] + x_gate_fixpt_add_cast_0[x_gate_fixpt_k];
        x_gate_fixpt_slice_temp = x_gate_fixpt_add_temp[x_gate_fixpt_k][2:0];
      end

      new_state_1[x_gate_fixpt_l] = x_gate_fixpt_slice_temp[0];
    end

  end

  assign new_state = new_state_1;

endmodule  // x_gate_fixpt

