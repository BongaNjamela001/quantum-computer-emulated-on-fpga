%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%          Generated by MATLAB 24.2 and Fixed-Point Designer 24.2          %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function new_state = x_gate_fixpt(state)
    % Apply the Pauli-X gate to a single qubit
    % Parameters:
    %   qubit_state - a 2x1 column vector representing the qubit state, e.g., [1; 0] for |0> or [0; 1] for |1>
    % Returns:
    %   new_state - the resulting state after applying the X gate

    % Define the Pauli-X gate (NOT gate)
    fm = get_fimath();

    X = fi([0, 1; 
         1, 0], 0, 1, 0, fm);

    % Apply the X gate to the input qubit state
    new_state = fi(X * state, 0, 1, 0, fm);
end


function fm = get_fimath()
	fm = fimath('RoundingMethod', 'Floor',...
	     'OverflowAction', 'Wrap',...
	     'ProductMode','FullPrecision',...
	     'MaxProductWordLength', 128,...
	     'SumMode','FullPrecision',...
	     'MaxSumWordLength', 128);
end
